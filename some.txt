twilightuser@TLSPC-001:~/Desktop/G_W_!$ touch w_1_.1
twilightuser@TLSPC-001:~/Desktop/G_W_!$ touch some.txt
twilightuser@TLSPC-001:~/Desktop/G_W_!$ git init
Initialized empty Git repository in /home/twilightuser/Desktop/G_W_!/.git/
twilightuser@TLSPC-001:~/Desktop/G_W_!$ git add w1.1.html
twilightuser@TLSPC-001:~/Desktop/G_W_!$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

	new file:   w1.1.html

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	some.txt

twilightuser@TLSPC-001:~/Desktop/G_W_!$ git rm --cached w1.1.html
rm 'w1.1.html'
twilightuser@TLSPC-001:~/Desktop/G_W_!$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	some.txt
	w1.1.html

nothing added to commit but untracked files present (use "git add" to track)
twilightuser@TLSPC-001:~/Desktop/G_W_!$ git add *.html
twilightuser@TLSPC-001:~/Desktop/G_W_!$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

	new file:   w1.1.html

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	some.txt

twilightuser@TLSPC-001:~/Desktop/G_W_!$ 

twilightuser@TLSPC-001:~/Desktop/G_W_!$ git add .
twilightuser@TLSPC-001:~/Desktop/G_W_!$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

	new file:   some.txt
	new file:   w1.1.html




Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

	new file:   w1.1.html

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	some.txt

twilightuser@TLSPC-001:~/Desktop/G_W_!$ git rm --cached w1.1.html
rm 'w1.1.html'
twilightuser@TLSPC-001:~/Desktop/G_W_!$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	some.txt
	w1.1.html

nothing added to commit but untracked files present (use "git add" to track)
twilightuser@TLSPC-001:~/Desktop/G_W_!$ git add *.html
twilightuser@TLSPC-001:~/Desktop/G_W_!$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

	new file:   w1.1.html

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	some.txt

twilightuser@TLSPC-001:~/Desktop/G_W_!$ git add .
twilightuser@TLSPC-001:~/Desktop/G_W_!$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

	new file:   some.txt
	new file:   w1.1.html

twilightuser@TLSPC-001:~/Desktop/G_W_!$ clear

twilightuser@TLSPC-001:~/Desktop/G_W_!$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

	new file:   some.txt
	new file:   w1.1.html

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	modified:   some.txt
	modified:   w1.1.html

twilightuser@TLSPC-001:~/Desktop/G_W_!$ git commit - m"Just checking the file"
error: pathspec '-' did not match any file(s) known to git.
error: pathspec 'mJust checking the file' did not match any file(s) known to git.
twilightuser@TLSPC-001:~/Desktop/G_W_!$ git add .
twilightuser@TLSPC-001:~/Desktop/G_W_!$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

	new file:   some.txt
	new file:   w1.1.html

twilightuser@TLSPC-001:~/Desktop/G_W_!$ git commit
Use "fg" to return to nano.or to close the file... 

[1]+  Stopped                 git commit
twilightuser@TLSPC-001:~/Desktop/G_W_!$ git commit
Use "fg" to return to nano.or to close the file... 

[2]+  Stopped                 git commit
twilightuser@TLSPC-001:~/Desktop/G_W_!$ git commit
Use "fg" to return to nano.or to close the file... 

[3]+  Stopped                 git commit
twilightuser@TLSPC-001:~/Desktop/G_W_!$ git fg
git: 'fg' is not a git command. See 'git --help'.

The most similar commands are
	log
	tag
twilightuser@TLSPC-001:~/Desktop/G_W_!$ fg
git commit
Use "fg" to return to nano.

[3]+  Stopped                 git commit
twilightuser@TLSPC-001:~/Desktop/G_W_!$ gf
gf: command not found
twilightuser@TLSPC-001:~/Desktop/G_W_!$ fg
git commit
Use "fg" to return to nano.

[3]+  Stopped                 git commit
twilightuser@TLSPC-001:~/Desktop/G_W_!$ fg
git commit
[master (root-commit) 9f8787c] Initial commit
 2 files changed, 76 insertions(+)
 create mode 100644 some.txt
 create mode 100644 w1.1.html
twilightuser@TLSPC-001:~/Desktop/G_W_!$ ^C



twilightuser@TLSPC-001:~/Desktop/G_W_!$ git commit - m"Just checking the file"
error: pathspec '-' did not match any file(s) known to git.
error: pathspec 'mJust checking the file' did not match any file(s) known to git.
twilightuser@TLSPC-001:~/Desktop/G_W_!$ git add .
twilightuser@TLSPC-001:~/Desktop/G_W_!$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

	new file:   some.txt
	new file:   w1.1.html

twilightuser@TLSPC-001:~/Desktop/G_W_!$ git commit
Use "fg" to return to nano.or to close the file... 

[1]+  Stopped                 git commit
twilightuser@TLSPC-001:~/Desktop/G_W_!$ git commit
Use "fg" to return to nano.or to close the file... 

[2]+  Stopped                 git commit
twilightuser@TLSPC-001:~/Desktop/G_W_!$ git commit
Use "fg" to return to nano.or to close the file... 

[3]+  Stopped                 git commit
twilightuser@TLSPC-001:~/Desktop/G_W_!$ git fg
git: 'fg' is not a git command. See 'git --help'.

The most similar commands are
	log
	tag
twilightuser@TLSPC-001:~/Desktop/G_W_!$ fg
git commit
Use "fg" to return to nano.

[3]+  Stopped                 git commit
twilightuser@TLSPC-001:~/Desktop/G_W_!$ gf
gf: command not found
twilightuser@TLSPC-001:~/Desktop/G_W_!$ fg
git commit
Use "fg" to return to nano.

[3]+  Stopped                 git commit
twilightuser@TLSPC-001:~/Desktop/G_W_!$ fg
git commit
[master (root-commit) 9f8787c] Initial commit
 2 files changed, 76 insertions(+)
 create mode 100644 some.txt
 create mode 100644 w1.1.html
twilightuser@TLSPC-001:~/Desktop/G_W_!$ ^C
twilightuser@TLSPC-001:~/Desktop/G_W_!$ clear

twilightuser@TLSPC-001:~/Desktop/G_W_!$ git status
On branch master
nothing to commit, working tree clean
twilightuser@TLSPC-001:~/Desktop/G_W_!$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	modified:   some.txt

no changes added to commit (use "git add" and/or "git commit -a")
twilightuser@TLSPC-001:~/Desktop/G_W_!$ git add some.txt
twilightuser@TLSPC-001:~/Desktop/G_W_!$ git commit -m 'add some working commands-2'
[master 765a7fd] add some working commands-2
 1 file changed, 129 insertions(+)
twilightuser@TLSPC-001:~/Desktop/G_W_!$ toch gitignore

Command 'toch' not found, did you mean:

  command 'loch' from deb therion-viewer
  command 'touch' from deb coreutils

Try: sudo apt install <deb name>

twilightuser@TLSPC-001:~/Desktop/G_W_!$ git status
On branch master
nothing to commit, working tree clean
twilightuser@TLSPC-001:~/Desktop/G_W_!$ touch gitignore
twilightuser@TLSPC-001:~/Desktop/G_W_!$ git ls
git: 'ls' is not a git command. See 'git --help'.

The most similar command is
	log
twilightuser@TLSPC-001:~/Desktop/G_W_!$ ls
gitignore  some.txt  w1.1.html
twilightuser@TLSPC-001:~/Desktop/G_W_!$ touch image.jpg
twilightuser@TLSPC-001:~/Desktop/G_W_!$ git add .
twilightuser@TLSPC-001:~/Desktop/G_W_!$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	new file:   gitignore
	new file:   image.jpg

twilightuser@TLSPC-001:~/Desktop/G_W_!$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	new file:   gitignore
	new file:   image.jpg

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	modified:   gitignore
	deleted:    image.jpg

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	s.txt


